buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-web')
    //compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    // 추가
    compile('org.springframework.boot:spring-boot-starter-security')
    //compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity5')
    //compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    //mysql
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly 'mysql:mysql-connector-java'
    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//지우기
    compile 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.2'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}
